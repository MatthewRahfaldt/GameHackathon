using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using Valve.VR;




public class ControllerManager : MonoBehaviour {
	
	public SteamVR_Input_Sources handType;
	public SteamVR_Behaviour_Pose controllerPose;
	public SteamVR_Action_Boolean grab;


	//private SteamVR_TrackedObject trackedObject;
	//private SteamVr_Controller.Device device;

	public GameObject collide;
	public GameObject inHand;


	/*
	void awake() {
		trackedObject = GetComponent<SteamVR_TrackedObject>();
	}
	*/

	void update() {
		/*
		//used for assigning functions to buttons
		device = SteamVR_Controller.Input((int)trackedObject.index);
		
		//When the grip button is compressed, grab the object
		if(device.GetPressDown(SteamVR_Controller.ButtonMask.Grip)) {
			if (collide) {
				grabObject();
			}
		}

		//When the grip button is released, release the object
		if (Controller.GetPressUp (SteamVR_Controller.ButtonMask.Grip)) {
			if (inHand){
				releaseObject();
			}
		}
		*/

		if (grab.GetLastStateDown(handType)) {
			if (collide) {
				grabObject();
			}
		}
		if (grab.GetLastStateDown(handType)) {
			if (inHand) {
				releaseObject();
			}
		}
	}

	//checking for ridgidbodies
	void OnTriggerEnter(Collider x) {
		if (!x.GetComponent<Rigidbody>()) {
			return;
		}
		collide = x.gameObject;
	}

	//colliding object gets set to null because there is nothing in the hand
	void OnTriggerExit(Collider x) {
		if (!collide) {
			return;
		}
        collide = null;
    }

    //assigns inHand and adds joint to a grabbed object
	private void grabObject() {
		inHand = collide;
		var joint = AddFixedJoint();
		joint.connectedBody = inHand.GetComponent<Rigidbody>();
	}

	//method to add fixed joint
	private FixedJoint AddFixedJoint() {
		FixedJoint fx = gameObject.AddComponent<FixedJoint>();
		fx.breakForce = 20000;
		fx.breakTorque = 20000;
		return fx;
	}

	//removes inHand and nullifies player effect on previously grabbed object
	private void releaseObject() {
		if (GetComponent<FixedJoint>()) {
			GetComponent<FixedJoint>().connectedBody = null; 
            Destroy(GetComponent<FixedJoint>());
		}
		inHand = null;
	}

}